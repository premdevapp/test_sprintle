{"version":3,"sources":["components/TransactionCard.tsx","features/balanceSlice.ts","features/transactionSlice.ts","App.tsx","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["TranscationCard","id","balance","state","useState","date","setDate","useEffect","Date","toString","split","toISOString","className","balanceSlice","createSlice","name","initialState","reducers","addBalance","action","payload","deduceBalance","actions","transactionSlice","value","addTransaction","push","App","balanceInput","setBalanceInput","stateInput","setStateInput","dispatch","useDispatch","useSelector","transactions","console","log","type","onChange","e","parseInt","target","onClick","uuidv4","map","transaction","key","store","configureStore","reducer","balanceReducer","transactionsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAmBeA,MAZf,YAAwE,EAA7CC,GAA8C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MACtC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OAHAC,qBAAU,WACRD,EAAS,IAAIE,MAAK,IAAIA,MAAOC,WAAWC,MAAM,OAAO,GAAG,QAAQC,iBAChE,IAEA,qBAAKC,UAAU,mCAAf,SACE,8BAAIP,EAAJ,MAAaH,EAAb,MAAyBC,Q,OCVlBU,EAAeC,YAAY,CACpCC,KAAM,UACNC,aAH0B,EAI1BC,SAAU,CACNC,WAAY,SAACf,EAAOgB,GAChB,OAAOhB,EAASgB,EAAOC,SAE3BC,cAAe,SAAClB,EAAOgB,GACnB,OAAGhB,EAAMgB,EAAOC,QAAQ,EAAUjB,EAASgB,EAAOC,QAC3CjB,MAOZ,EAAsCU,EAAaS,QAA3CJ,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,cAEZR,IAAf,QCJaU,EAAmBT,YAAY,CACxCC,KAAM,cACNC,aANmC,CACnCQ,MAAO,IAMPP,SAAU,CACNQ,eAAgB,SAACtB,EAAOgB,GACpBhB,EAAMqB,MAAME,KAAKP,EAAOC,aAKtBK,EAAmBF,EAAiBD,QAApCG,eACCF,IAAf,Q,MC4CeI,MA/Df,WACE,MAAwCvB,mBAAS,GAAjD,mBAAOwB,EAAP,KAAqBC,EAArB,KACA,EAAoCzB,mBAAS,OAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,cAEX/B,EAAUgC,aACd,SAAC/B,GAAD,OAAsBA,EAAMD,WAGxBiC,EAAeD,aAAY,SAAC/B,GAAD,OAAqBA,EAAMgC,aAAaX,SAmBzE,OAjBAY,QAAQC,IAAIF,GAkBV,sBAAKvB,UAAU,MAAf,UACE,yDACA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,8BACE,qBAAIA,UAAU,iBAAd,uBAA0CV,GAAW,OAEvD,sBAAKU,UAAU,0BAAf,UACE,uBACE0B,KAAK,SACLd,MAAOI,EACPW,SAAU,SAACC,GACTX,GAAgB,kBAAMY,SAASD,EAAEE,OAAOlB,aAG5C,uBACA,wBAAQmB,QAhCY,WACvBf,IACLI,EAASd,EAAWU,IACpBC,EAAgB,GAChBG,EAASP,EAAe,CAACxB,GAAI2C,cAAU1C,QAAS0B,EAAanB,WAAYN,MAAO2B,OA4BxE,iBACA,wBAAQa,QA1Be,WAC/BZ,GAAc,iBAAI,YACbH,IACLI,EAASX,EAAcO,IACvBC,EAAgB,GAChBG,EAASP,EAAe,CAACxB,GAAI2C,cAAU1C,QAAS0B,EAAanB,WAAYN,MAAO2B,OAqBxE,0BAGJ,qBAAKlB,UAAU,wBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,+CACGuB,EAAaU,KAAI,SAACC,GAAD,OAClB,wBAAC,EAAD,2BAAqBA,GAArB,IAAkCC,IAAKD,EAAY7C,qBCjDlD+C,EAVDC,YAAe,CAC3BC,QAAS,CACPhD,QAASiD,EACThB,aAAciB,KCMHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJiB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ada7f74.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\"\ninterface ITranscationCardProps {\n  id: string;\n  balance: string;\n  state: string;\n}\n\nfunction TranscationCard({ id, balance, state }: ITranscationCardProps) {\n  const [date, setDate] = useState(\"\")\n  useEffect(() => {\n    setDate((new Date(new Date().toString().split('GMT')[0]+' UTC').toISOString()))\n  },[])\n  return (\n    <div className=\"transaction-value-card-container\">\n      <p>{date} - {balance} - {state}</p>\n    </div>\n  );\n}\n\nexport default TranscationCard;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n\nconst initialState : number = 0\nexport const balanceSlice = createSlice({\n    name: \"balance\",\n    initialState,\n    reducers: {\n        addBalance: (state, action: PayloadAction<number>) => {\n            return state += action.payload\n        },\n        deduceBalance: (state, action: PayloadAction<number>) => {\n            if(state-action.payload>0) return state -= action.payload\n            return state\n        }\n\n    }\n\n});\n\nexport const { addBalance, deduceBalance } = balanceSlice.actions;\n\nexport default balanceSlice.reducer;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface transaction {\n    id: string;\n    balance: string;\n    state: string;\n}\n\ninterface transactionState {\n    value: transaction[];\n}\n\n\n\nconst initialState: transactionState = {\n    value: []\n}\n\nexport const transactionSlice = createSlice({\n    name: \"transaction\",\n    initialState,\n    reducers: {\n        addTransaction: (state, action: PayloadAction<transaction>) => {\n            state.value.push(action.payload);\n        }\n    }\n})\n\nexport const {addTransaction } = transactionSlice.actions;\nexport default transactionSlice.reducer;","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { RootState } from \"./app/store\";\nimport TranscationCard from \"./components/TransactionCard\";\nimport { addBalance, deduceBalance } from \"./features/balanceSlice\";\nimport {addTransaction} from \"./features/transactionSlice\"\nimport \"./App.css\";\n\nfunction App() {\n  const [balanceInput, setBalanceInput] = useState(0);\n  const [stateInput, setStateInput] = useState(\"ADD\");\n\n  const dispatch = useDispatch();\n\n  const balance = useSelector(\n    (state: RootState) => state.balance\n  );\n\n  const transactions = useSelector((state: RootState) =>state.transactions.value );\n\n  console.log(transactions)\n\n  const handleAddReservations = () => {\n    if (!balanceInput) return;\n    dispatch(addBalance(balanceInput));\n    setBalanceInput(0);\n    dispatch(addTransaction({id: uuidv4(), balance: balanceInput.toString(), state: stateInput}))\n  };\n\n  const handleRemoveReservations = () => {\n    setStateInput(()=>\"REMOVE\")\n    if (!balanceInput) return;\n    dispatch(deduceBalance(balanceInput));\n    setBalanceInput(0);\n    dispatch(addTransaction({id: uuidv4(), balance: balanceInput.toString(), state: stateInput}))\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Expense Tracker - Basic</h1>\n      <div className=\"container\">\n        <div className=\"balance-container\">\n          <div>\n            <h5 className=\"balance-header\">Balance : {balance || 0}</h5>\n          </div>\n          <div className=\"balance-input-container\">\n            <input\n              type=\"number\"\n              value={balanceInput}\n              onChange={(e) => {\n                setBalanceInput(() => parseInt(e.target.value));\n              }}\n            />\n            <br />\n            <button onClick={handleAddReservations}>Add</button>\n            <button onClick={handleRemoveReservations}>Remove</button>\n          </div>\n        </div>\n        <div className=\"transaction-container\">\n          <div className=\"h5header\">\n            <h5>Transcations:</h5>\n              {transactions.map((transaction) => (\n              <TranscationCard {...transaction} key={transaction.id} />\n            ))}  \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport balanceReducer from \"../features/balanceSlice\";\nimport transactionsReducer from \"../features/transactionSlice\";\n\nconst store = configureStore({\n  reducer: {\n    balance: balanceReducer,\n    transactions: transactionsReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}